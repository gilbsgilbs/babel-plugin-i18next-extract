trigger:
  branches:
    include:
      - master
      - features/*
      - releases/*
      - greenkeeper/*
  tags:
    include:
      - '*'

stages:
  - stage: checks
    displayName: Static checks
    jobs:
      - template: .ci/templates/docker-jobs.yml
        parameters:
          jobs:
            - job: lint
              displayName: Run ESLint
              steps:
                - script: yarn install && yarn run lint
            - job: types
              displayName: Run Typing Checks
              steps:
                - script: yarn install && yarn run types
            - job: audit
              displayName: Run Yarn Audit
              continueOnError: true
              steps:
                - script: yarn install && yarn audit
                - script: cd docs && yarn install && yarn audit
  - stage: tests
    displayName: Run tests
    jobs:
      - template: .ci/templates/docker-jobs.yml
        parameters:
          jobs:
            - job: test
              displayName: Run tests suite
              strategy:
                matrix:
                  node10:
                    container: 'node:10'
                  node12:
                    container: 'node:12'
              steps:
                - script: >
                    curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
                    && chmod +x ./cc-test-reporter
                - script: yarn install
                - script: >
                    ./cc-test-reporter before-build
                    && yarn run test --coverage
                    && ./cc-test-reporter after-build --debug --exit-code $?
                  env:
                    CC_TEST_REPORTER_ID: $(codeclimate.token)
                    GIT_BRANCH: $(Build.SourceBranchName)
                    GIT_COMMIT_SHA: $(Build.SourceVersion)
            - job: docs
              displayName: Check documentation is up-to-date
              steps:
              - script: cd docs/ && yarn install && yarn run build
              - script: git add docs/ && git diff --cached --exit-code -- docs/
  - stage: build
    displayName: Build Project
    jobs:
      - template: .ci/templates/docker-jobs.yml
        parameters:
          jobs:
            - job: build
              displayName: Build
              steps:
              - script: yarn install && yarn run build
              - task: PublishPipelineArtifact@0
                inputs:
                  targetPath: lib/
                  artifactName: babel-plugin-i18next-extract
  - stage: deploy
    displayName: Deploy Project
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/releases/'))
    jobs:
      - template: .ci/templates/docker-jobs.yml
        parameters:
          jobs:
            - job: deploy
              displayName: Deploy to NPM
              steps:
              - task: DownloadPipelineArtifact@2
                inputs:
                  path: lib/
                  artifact: babel-plugin-i18next-extract
              - script: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
                env:
                  NPM_TOKEN: $(npm.token)
              - script: |
                  yarn version --non-interactive --new-version "${VERSION}" --no-git-tag-version
                  yarn publish --non-interactive
                env:
                  VERSION: $(Build.SourceBranchName)

